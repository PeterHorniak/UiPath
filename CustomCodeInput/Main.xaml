<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="396,913" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="376,813" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="10" Name="number1" />
      <Variable x:TypeArguments="x:Int32" Default="20" Name="number2" />
      <Variable x:TypeArguments="x:String" Default="/" Name="operator1" />
      <Variable x:TypeArguments="x:String" Name="result1" />
      <Variable x:TypeArguments="x:String" Name="formula1" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Please enter a whole number" Title="Enter first number">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:Int32">[number1]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Please enter another whole number!" Title="Enter second number">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:Int32">[number2]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Please enter an operator to apply to those numbers&#xD;&#xA;This could be symbols like addition (+) or multiplication (*), please do not use strings like modulus (Mod)" Title="Enter operator">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[operator1]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This code was adapted from:&#xA;https://stackoverflow.com/questions/36200047/dynamic-code-execution-string-runtime-code-vb-net" Code="'Puts together the code we want to execute&#xD;&#xA;formula = in_number1 &amp; &quot; &quot; &amp; in_operation1 &amp; &quot; &quot; &amp; in_number2&#xD;&#xA;&#xD;&#xA;'Makes a column whose values are the result of our formula&#xD;&#xA;Dim colExp As New DataColumn&#xD;&#xA;    With colExp&#xD;&#xA;        .DataType = System.Type.GetType(&quot;System.String&quot;)&#xD;&#xA;        .ColumnName = &quot;Expression&quot;&#xD;&#xA;        .Expression = formula&#xD;&#xA;    End With&#xD;&#xA;&#xD;&#xA;'Makes a table with the column from before&#xD;&#xA;'Right now the table only has a header row&#xD;&#xA;Dim dt As New DataTable&#xD;&#xA;    With dt.Columns&#xD;&#xA;        .Add(colExp)&#xD;&#xA;    End With&#xD;&#xA;&#xD;&#xA;'Adds a row to the table from before&#xD;&#xA;'Which gets automatically filled with the result of our formula&#xD;&#xA;Dim row As DataRow = dt.NewRow&#xD;&#xA;     dt.Rows.Add(row)&#xD;&#xA;&#xD;&#xA;'Sends out the result of the formula&#xD;&#xA;out_result1 = row.Field(Of String)(&quot;Expression&quot;).ToString" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,221" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_number1">[number1]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_number2">[number2]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_operation1">[operator1]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_result1">[result1]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="formula">[formula1]</OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;The result of the formula &quot; &amp; formula1 &amp; &#xD;&#xA;&quot; is &quot; &amp; result1]" />
  </Sequence>
</Activity>